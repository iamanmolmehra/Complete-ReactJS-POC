{"ast":null,"code":"var _jsxFileName = \"/home/muhammad_siddik_akbar/REACT.JS Anmol/code-evolution/src/Components/Animation.js\";\nimport React, { Component } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Animation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: ['Blockchain', 'ReactJS', 'TypeScript', 'JavaTpoint']\n    };\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  handleAdd() {\n    const newItems = this.state.items.concat([prompt('Enter Item Name')]);\n    this.setState({\n      items: newItems\n    });\n  }\n\n  handleRemove(i) {\n    let newItems = this.state.items.slice();\n    newItems.splice(i, 1);\n    this.setState({\n      items: newItems\n    });\n  }\n\n  render() {\n    const items = this.state.items.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => this.handleRemove(i),\n      children: item\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Animation Example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleAdd,\n        children: \"Insert Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CSSTransitionGroup, {\n        transitionName: \"example\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 600,\n        children: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Animation;","map":{"version":3,"sources":["/home/muhammad_siddik_akbar/REACT.JS Anmol/code-evolution/src/Components/Animation.js"],"names":["React","Component","CSSTransitionGroup","Animation","constructor","props","state","items","handleAdd","bind","newItems","concat","prompt","setState","handleRemove","i","slice","splice","render","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,wBAAnC;;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACC,SAA9B,CAAwC;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE,CAAC,YAAD,EAAe,SAAf,EAA0B,YAA1B,EAAwC,YAAxC;AAAR,KAAb;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDD,EAAAA,SAAS,GAAG;AACV,UAAME,QAAQ,GAAG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBI,MAAjB,CAAwB,CACvCC,MAAM,CAAC,iBAAD,CADiC,CAAxB,CAAjB;AAGA,SAAKC,QAAL,CAAc;AAACN,MAAAA,KAAK,EAAEG;AAAR,KAAd;AACD;;AAEDI,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,QAAIL,QAAQ,GAAG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBS,KAAjB,EAAf;AACAN,IAAAA,QAAQ,CAACO,MAAT,CAAgBF,CAAhB,EAAmB,CAAnB;AACA,SAAKF,QAAL,CAAc;AAACN,MAAAA,KAAK,EAAEG;AAAR,KAAd;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAMX,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBY,GAAjB,CAAqB,CAACC,IAAD,EAAOL,CAAP,kBACjC;AAAgB,MAAA,OAAO,EAAE,MAAM,KAAKD,YAAL,CAAkBC,CAAlB,CAA/B;AAAA,gBACGK;AADH,OAAUA,IAAV;AAAA;AAAA;AAAA;AAAA,YADY,CAAd;AAMA,wBACE;AAAA,8BACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,eAEM;AAAQ,QAAA,OAAO,EAAE,KAAKZ,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFN,eAGM,QAAC,kBAAD;AACG,QAAA,cAAc,EAAC,SADlB;AAED,QAAA,sBAAsB,EAAE,GAFvB;AAGG,QAAA,sBAAsB,EAAE,GAH3B;AAAA,kBAIID;AAJJ;AAAA;AAAA;AAAA;AAAA,cAHN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAvCqC;;AAyCxC,eAAeJ,SAAf","sourcesContent":["import React, { Component } from 'react';  \nimport { CSSTransitionGroup } from 'react-transition-group';  \n  \nclass Animation extends React.Component {  \n    constructor(props) {  \n    super(props);  \n    this.state = {items: ['Blockchain', 'ReactJS', 'TypeScript', 'JavaTpoint']};  \n    this.handleAdd = this.handleAdd.bind(this);  \n  }  \n  \n  handleAdd() {  \n    const newItems = this.state.items.concat([  \n      prompt('Enter Item Name')  \n    ]);  \n    this.setState({items: newItems});  \n  }  \n  \n  handleRemove(i) {  \n    let newItems = this.state.items.slice();  \n    newItems.splice(i, 1);  \n    this.setState({items: newItems});  \n  }  \n  \n  render() {  \n    const items = this.state.items.map((item, i) => (  \n      <div key={item} onClick={() => this.handleRemove(i)}>  \n        {item}  \n      </div>  \n    ));  \n  \n    return (  \n      <div>  \n    <h1>Animation Example</h1>  \n            <button onClick={this.handleAdd}>Insert Item</button>  \n            <CSSTransitionGroup  \n               transitionName=\"example\"  \n           transitionEnterTimeout={800}  \n               transitionLeaveTimeout={600}>  \n               {items}  \n            </CSSTransitionGroup>  \n      </div>  \n    );  \n  }  \n}  \nexport default Animation;  "]},"metadata":{},"sourceType":"module"}