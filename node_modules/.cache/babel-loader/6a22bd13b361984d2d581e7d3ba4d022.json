{"ast":null,"code":"var _jsxFileName = \"/home/muhammad_siddik_akbar/REACT.JS/code-evolution/src/Components/ClickCounter.js\";\nimport React, { Component } from 'react';\nimport UpdatedComponent from './WithCounter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ClickCounter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.incrementCount = () => {\n      this.setState(prevState => {\n        return {\n          count: prevState.count + 1\n        };\n      });\n    };\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    const {\n      count\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.incrementCount,\n      children: [this.props, \"Clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default _c = UpdatedComponent(ClickCounter);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/muhammad_siddik_akbar/REACT.JS/code-evolution/src/Components/ClickCounter.js"],"names":["React","Component","UpdatedComponent","ClickCounter","constructor","props","incrementCount","setState","prevState","count","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,eAA7B;;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAEjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,cARmB,GAQF,MAAM;AACnB,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,eAAO;AAAEC,UAAAA,KAAK,EAAGD,SAAS,CAACC,KAAV,GAAkB;AAA5B,SAAP;AACH,OAFD;AAGH,KAZkB;;AAGf,SAAKC,KAAL,GAAa;AACRD,MAAAA,KAAK,EAAG;AADA,KAAb;AAGH;;AAQDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACF,MAAAA;AAAD,QAAU,KAAKC,KAArB;AACA,wBAAO;AAAQ,MAAA,OAAO,EAAE,KAAKJ,cAAtB;AAAA,iBAAuC,KAAKD,KAA5C,cAA2DI,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAnBgC;;AAsBrC,oBAAeP,gBAAgB,CAACC,YAAD,CAA/B","sourcesContent":["import React, { Component } from 'react'\nimport UpdatedComponent from './WithCounter'\n\nclass ClickCounter extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             count : 0\n        }\n    }\n    \n    incrementCount = () => {\n        this.setState(prevState => {\n            return { count : prevState.count + 1 }\n        })\n    }\n   \n    render() {\n        const {count} = this.state\n        return <button onClick={this.incrementCount}>{this.props}Clicked {count} times</button>\n    }\n}\n\nexport default UpdatedComponent(ClickCounter)\n"]},"metadata":{},"sourceType":"module"}