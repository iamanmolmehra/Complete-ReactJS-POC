{"ast":null,"code":"var _jsxFileName = \"/home/muhammad_siddik_akbar/REACT.JS/code-evolution/src/Components/WithCounter.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdatedComponent = OriginalComponent => {\n  class NewComponent extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.incrementCount = () => {\n        this.setState(prevState => {\n          return {\n            count: prevState.count + 1\n          };\n        });\n      };\n\n      this.state = {\n        count: 0\n      };\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(OriginalComponent, {\n        count: this.state.count,\n        incremen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  return NewComponent;\n};\n\n_c = UpdatedComponent;\nexport default UpdatedComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatedComponent\");","map":{"version":3,"sources":["/home/muhammad_siddik_akbar/REACT.JS/code-evolution/src/Components/WithCounter.js"],"names":["React","UpdatedComponent","OriginalComponent","NewComponent","Component","constructor","props","incrementCount","setState","prevState","count","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,gBAAgB,GAAGC,iBAAiB,IAAI;AAC1C,QAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAEvCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;;AADe,WAQnBC,cARmB,GAQF,MAAM;AACnB,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,iBAAO;AAAEC,YAAAA,KAAK,EAAGD,SAAS,CAACC,KAAV,GAAkB;AAA5B,WAAP;AACH,SAFD;AAGH,OAZkB;;AAGf,WAAKC,KAAL,GAAa;AACRD,QAAAA,KAAK,EAAG;AADA,OAAb;AAGH;;AAQDE,IAAAA,MAAM,GAAG;AACL,0BAAO,QAAC,iBAAD;AAAmB,QAAA,KAAK,EAAG,KAAKD,KAAL,CAAWD,KAAtC;AAA6C,QAAA,QAAQ;AAArD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAlBsC;;AAoB3C,SAAOP,YAAP;AACH,CAtBD;;KAAMF,gB;AAwBN,eAAeA,gBAAf","sourcesContent":["import React from 'react'\n\nconst UpdatedComponent = OriginalComponent => {\n    class NewComponent extends React.Component {\n\n        constructor(props) {\n            super(props)\n        \n            this.state = {\n                 count : 0\n            }\n        }\n        \n        incrementCount = () => {\n            this.setState(prevState => {\n                return { count : prevState.count + 1 }\n            })\n        }\n\n        render() {\n            return <OriginalComponent count= {this.state.count} incremen />\n        }\n    }\n    return NewComponent\n}\n\nexport default UpdatedComponent"]},"metadata":{},"sourceType":"module"}