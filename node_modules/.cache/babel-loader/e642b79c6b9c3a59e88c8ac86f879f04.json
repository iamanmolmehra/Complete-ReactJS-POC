{"ast":null,"code":"var _jsxFileName = \"/home/muhammad_siddik_akbar/REACT.JS/code-evolution/src/Components/IncrementDecrement.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass IncrementDecrement extends Component {\n  constructor(props) {\n    super(props);\n\n    this.incrementCount = () => {\n      this.setState(prevState => {\n        return {\n          count: prevState.count + 1\n        };\n      });\n    };\n\n    this.reset = () => {\n      this.setState(resetState => {\n        return {\n          count: this.state.count\n        };\n      });\n    };\n\n    this.decrementCount = () => {\n      this.setState(newState => {\n        return {\n          count: newState.count - 1\n        };\n      });\n    };\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    const {\n      count\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.incrementCount,\n        children: \"Increase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.decrementCount,\n        children: \"decrease\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default IncrementDecrement;","map":{"version":3,"sources":["/home/muhammad_siddik_akbar/REACT.JS/code-evolution/src/Components/IncrementDecrement.js"],"names":["React","Component","IncrementDecrement","constructor","props","incrementCount","setState","prevState","count","reset","resetState","state","decrementCount","newState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,MAAMC,kBAAN,SAAiCD,SAAjC,CAA2C;AAEvCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,cARmB,GAQF,MAAM;AACnB,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,eAAO;AAACC,UAAAA,KAAK,EAAGD,SAAS,CAACC,KAAV,GAAkB;AAA3B,SAAP;AACH,OAFD;AAGH,KAZkB;;AAAA,SAcnBC,KAdmB,GAcX,MAAM;AACV,WAAKH,QAAL,CAAcI,UAAU,IAAI;AACxB,eAAO;AAACF,UAAAA,KAAK,EAAG,KAAKG,KAAL,CAAWH;AAApB,SAAP;AACH,OAFD;AAGH,KAlBkB;;AAAA,SAoBnBI,cApBmB,GAoBF,MAAM;AACnB,WAAKN,QAAL,CAAcO,QAAQ,IAAI;AACtB,eAAO;AAACL,UAAAA,KAAK,EAAGK,QAAQ,CAACL,KAAT,GAAgB;AAAzB,SAAP;AACH,OAFD;AAGH,KAxBkB;;AAGf,SAAKG,KAAL,GAAa;AACRH,MAAAA,KAAK,EAAG;AADA,KAAb;AAGH;;AAsBDM,EAAAA,MAAM,GAAG;AACL,UAAM;AAACN,MAAAA;AAAD,QAAU,KAAKG,KAArB;AACA,wBACI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKN,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,wBAAMG,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKI,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAIa;AAAA;AAAA;AAAA;AAAA,cAJb,eAKI;AAAQ,QAAA,OAAO,EAAE,KAAKH,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA,oBADJ;AASH;;AAzCsC;;AA4C3C,eAAeP,kBAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass IncrementDecrement extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             count : 0\n        }\n    }\n    \n    incrementCount = () => {\n        this.setState(prevState => {\n            return {count : prevState.count + 1}\n        })\n    }\n    \n    reset = () => {\n        this.setState(resetState => {\n            return {count : this.state.count}\n        })\n    }\n\n    decrementCount = () => {\n        this.setState(newState => {\n            return {count : newState.count -1}\n        })\n    }\n\n\n\n    render() {\n        const {count} = this.state\n        return (\n            <>\n                <button onClick={this.incrementCount}>Increase</button>\n                <h2> {count} </h2>  \n                <button onClick={this.decrementCount}>decrease</button>\n                <br></br><br></br>\n                <button onClick={this.reset}>Reset</button>\n            </>\n        )\n    }\n}\n\nexport default IncrementDecrement\n"]},"metadata":{},"sourceType":"module"}